#### Crate Projetc ####
1 - rails new . --css tailwind
2 - Gemfile -> "font-awesome-sass", "~> 6.5.1”
3 - application.html.erb -> <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/all.css"/>



#### Devise ####
1 - bundle add devise
2 - rails generate devise:install

# No arquivo routes.rb adicione o seguinte código:
Rails.application.routes.draw do
  root "home#index"
end

# Crie o arquivo home_controller.rb na pasta controllers
class HomeController < ApplicationController
    def index
    end
end

# Crie a pasta home dentro de views crie o arquivo index.html.erb:
<h2>Home</h2>
<%= icon('fa-brands', 'font-awesome')%>
<%= icon('fa-solid', 'user-secret')%>



#### Cadastro e Login ####
1 - rails generate devise Admin
2 - rails db:migrate

3 - No arquivo routes.rb:
Rails.application.routes.draw do
  devise_for :admins
  root "home#index"

  authenticated :admin_user do
    root to: "admin#index", as: :admin_root
  end 
end

4 - Crie o arquivo admin_controller.rb na pasta controllers:
class AdminController < ApplicationController
    before_action :authenticate_admin!
    def index

    end
end

#Crie a pasta admin dentro de views e crie o arquivo index.html.erb:
<h2>Admin</h2>



#### Category ####
1 - rails g scaffold admin::category name:string description:text
  *estou utilizando o admin::category, para que essa category fique na jurisdição do admin
2 - No arquivo migrate categories deixar nome da tabela de apenas categories.
3 - Deixar model categories dentro da raiz de models e apagar o Admin::
4 - No Controller/admin/categories_controller.rb apagar onde tem Admin::Category
5 - admin_controller.rb -> layout "admin"
6 - No categories_controller.rb -> class Admin::CategoriesController < AdminController (mudo para AdminController)
7 - No /layouts/admin.html.erb -> altero para link_to admin_categories_path



#### Category II ####
1 - /views/admin/categories/_form.html.erb (adiciono o [:admin, admin_category])
        <%= form_with(model: [:admin, admin_category], class: "contents") do |form| %>
2 - /views/admin/categories/edit.html.erb (adiciono o [:admin, @admin_category])
        <%= link_to "Show this category", [:admin, @admin_category], class:...
3 - /app/controllers/categories_controller (:admin_category).permit(:name...) altero para
        params.expect(category: [ :name, :description, :text ])
4 - /views/admin/categories show.html.erb (adiciono admin_category_path)
        <%= button_to "Destroy this category", admin_category_path(@admin_category), method:...
5 - /app/controllers/admin/categories_controller.rb
        redirect_to @admin_category alterar para: redirect_to admin_category_path(@admin_category)



#### Add Image upload ####
  *Tive que instalar libvips para que a img fosse renderizada:
  sudo apt-get update
  sudo apt-get install libvips42

1 - Gemfile, descomentar: gem "image_processing", "~> 1.2" e bundle install e rails active_storage:install
2 - /app/models/category.rb
        class Category < ApplicationRecord
  has_one_attached :image do |attachable|
    attachable.variant :thumb, resize_to_limit: [ 50, 50 ]
  end
end

3 - No arquivo _form.html.erb
      <div class="my-5">
    <%= form.label :image %>
    <%= form.file_field :image, rows: 4, class: "block shadow rounded-md border border-gray-200 outline-none px-3 py-2 mt-2 w-full" %>
  </div>

4 - No arquivo categories_controller.rb
          # Only allow a list of trusted parameters through.
    def admin_category_params
      params.require(:category).permit(:name, :description, :image)
    end

5 - No arquivo _category.html.erb
         <p class="my-5">
    <strong class="block font-medium mb-1">Image:</strong>
    <%= category.image.present? ? image_tag(category.image, size: "200x200", class: "rounded-lg") : image_tag("<https://via.placeholder.com/200>") %>
  </p>

6 - no arquivo index.html.erb
         <td class="px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-800 underline">
                    <%= c.image.present? ? image_tag(c.image.variant(:thumb)) : image_tag("https://via.placeholder.com/50") %>
                  </td>



#### Products ####
1 - create_table :admin_products do |t| mudar para: create_table :products do |t| e após rails db:migrate  
2 - /app/model/admin/product.rb alterar para: belongs_to :category      
3 - /app/controllers/admin/products_controller.rb tirar onde faz referencia com Admin::
        Admin::Product.find(params.expect(:id)) -> Product.find(params.expect(:id))
    Alterar também:     
        # Only allow a list of trusted parameters through.
        params.require(:product).permit(:name, :description, :price, :category_id, :active)

4 - /layouts/admin.html.erb 
        onde está referenciando ao products <span class="hidden md:inline-block">Product</span>
        atualizo o link to: <%= link_to admin_products_path...

5 - em products_controller.rb 
        class Admin::ProductsController < ApplicationController atualizar: class Admin::ProductsController < AdminController
  